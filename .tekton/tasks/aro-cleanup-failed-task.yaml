# SPDX-FileCopyrightText: 2025 SAP edge team
# SPDX-FileContributor: Manjun Jiao (@mjiao)
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: aro-cleanup-failed
spec:
  params:
    - name: aroClusterName
      type: string
      description: "ARO cluster name"
    - name: azureSecretName
      type: string
      description: "Name of the Kubernetes Secret containing Azure service principal credentials and ARO resource group"
      default: "azure-sp-secret"
  workspaces:
    - name: source
  steps:
    - name: cleanup-failed
      image: mcr.microsoft.com/azure-cli:latest
      workingDir: $(workspaces.source.path)
      env:
        - name: ARO_CLUSTER_NAME
          value: "$(params.aroClusterName)"
      envFrom:
        - secretRef:
            name: $(params.azureSecretName)
      script: |
        #!/usr/bin/env bash
        set -euo pipefail
        
        # Use values from azure-sp-secret
        ARO_RESOURCE_GROUP="$aroResourceGroup"
        
        echo "üîê Logging into Azure..."
        az login --service-principal -u "$clientId" -p "$clientSecret" --tenant "$tenantId"
        
        echo "üìã Setting subscription..."
        az account set --subscription "$(az account show --query id -o tsv)"
        
        echo "üßπ Cleaning up failed ARO deployment..."
        
        # Check if resource group exists
        if ! az group show --name "$ARO_RESOURCE_GROUP" >/dev/null 2>&1; then
          echo "‚úÖ Resource group $ARO_RESOURCE_GROUP does not exist - nothing to clean up"
          exit 0
        fi
        
        # Check cluster status and clean up if failed
        if az aro show --name "$ARO_CLUSTER_NAME" --resource-group "$ARO_RESOURCE_GROUP" >/dev/null 2>&1; then
          CLUSTER_STATUS=$(az aro show --name "$ARO_CLUSTER_NAME" --resource-group "$ARO_RESOURCE_GROUP" --query "provisioningState" -o tsv)
          echo "Cluster status: $CLUSTER_STATUS"
          
          if [[ "$CLUSTER_STATUS" == "Failed" ]]; then
            echo "üóëÔ∏è Cluster is in failed state, deleting..."
            az aro delete --name "$ARO_CLUSTER_NAME" --resource-group "$ARO_RESOURCE_GROUP" --yes --no-wait
            echo "‚è≥ Waiting for failed cluster deletion..."
            sleep 60
          fi
        fi
        
        # Clean up any remaining resources
        echo "üßπ Cleaning up remaining resources..."
        RESOURCES=$(az resource list --resource-group "$ARO_RESOURCE_GROUP" --query "[].id" -o tsv)
        if [[ -n "$RESOURCES" ]]; then
          echo "Found resources to delete:"
          echo "$RESOURCES"
          az resource delete --resource-group "$ARO_RESOURCE_GROUP" --ids $RESOURCES --yes || echo "Some resources may have already been deleted"
        fi
        
        # Delete the resource group
        echo "üóëÔ∏è Deleting resource group..."
        az group delete --name "$ARO_RESOURCE_GROUP" --yes --no-wait
        
        echo "‚úÖ Failed deployment cleanup completed!" 