# SPDX-FileCopyrightText: 2025 SAP edge team
# SPDX-FileContributor: Manjun Jiao (@mjiao)
# SPDX-FileContributor: Kirill Satarin (@kksat)
#
# SPDX-License-Identifier: Apache-2.0

---
name: Auto-approve Validation PRs

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  auto-approve:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if changes are only in .tekton folder
        id: check-tekton-folder
        run: |
          # Get list of modified files using a more robust approach
          if [[ -n "${{ github.event.pull_request.base.sha }}" && -n "${{ github.event.pull_request.head.sha }}" ]]; then
            # Use git diff if both SHAs are available
            FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} 2>/dev/null || echo "")
          fi
          
          # Fallback: if git diff failed or no files found, check current changes
          if [[ -z "$FILES" ]]; then
            echo "Git diff failed, checking current changes..."
            FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || echo "")
          fi
          
          # If still no files, check staged changes
          if [[ -z "$FILES" ]]; then
            echo "No diff found, checking staged changes..."
            FILES=$(git diff --cached --name-only 2>/dev/null || echo "")
          fi
          
          # If no files found at all, assume no changes
          if [[ -z "$FILES" ]]; then
            echo "No files found to check"
            echo "tekton_only=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Files to check: $FILES"
          
          # Check if all files are in .tekton folder
          NON_TEKTON_FILES=""
          for file in $FILES; do
            if [[ ! "$file" =~ ^\.tekton/ ]]; then
              NON_TEKTON_FILES="$NON_TEKTON_FILES $file"
            fi
          done
          
          if [[ -n "$NON_TEKTON_FILES" ]]; then
            echo "Found files outside .tekton folder: $NON_TEKTON_FILES"
            echo "tekton_only=false" >> $GITHUB_OUTPUT
          else
            echo "All files are in .tekton folder"
            echo "tekton_only=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if files contain pipelinerun
        id: check-pipelinerun
        run: |
          # Get list of modified files using a more robust approach
          if [[ -n "${{ github.event.pull_request.base.sha }}" && -n "${{ github.event.pull_request.head.sha }}" ]]; then
            # Use git diff if both SHAs are available
            TEKTON_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} 2>/dev/null | grep '^\.tekton/' || echo "")
          fi
          
          # Fallback: if git diff failed or no files found, check current changes
          if [[ -z "$TEKTON_FILES" ]]; then
            echo "Git diff failed, checking current changes..."
            TEKTON_FILES=$(git diff --name-only HEAD~1 HEAD 2>/dev/null | grep '^\.tekton/' || echo "")
          fi
          
          # If still no files, check staged changes
          if [[ -z "$TEKTON_FILES" ]]; then
            echo "No diff found, checking staged changes..."
            TEKTON_FILES=$(git diff --cached --name-only 2>/dev/null | grep '^\.tekton/' || echo "")
          fi
          
          if [[ -z "$TEKTON_FILES" ]]; then
            echo "No files found in .tekton folder"
            echo "has_pipelinerun=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Tekton files to check: $TEKTON_FILES"
          
          # Check each file for pipelinerun content
          FILES_WITH_PIPELINERUN=""
          for file in $TEKTON_FILES; do
            # Try to get file content using different methods
            FILE_CONTENT=""
            if [[ -f "$file" ]]; then
              FILE_CONTENT=$(cat "$file")
            elif [[ -n "${{ github.event.pull_request.head.sha }}" ]]; then
              FILE_CONTENT=$(git show ${{ github.event.pull_request.head.sha }}:$file 2>/dev/null || echo "")
            else
              FILE_CONTENT=$(git show HEAD:$file 2>/dev/null || echo "")
            fi
            
            if [[ -n "$FILE_CONTENT" ]] && echo "$FILE_CONTENT" | grep -i "kind:\s*PipelineRun" > /dev/null; then
              FILES_WITH_PIPELINERUN="$FILES_WITH_PIPELINERUN $file"
            fi
          done
          
          if [[ -n "$FILES_WITH_PIPELINERUN" ]]; then
            echo "Files containing PipelineRun: $FILES_WITH_PIPELINERUN"
            echo "has_pipelinerun=true" >> $GITHUB_OUTPUT
          else
            echo "No files contain PipelineRun"
            echo "has_pipelinerun=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto-approve if conditions met
        if: >-
          startsWith(github.event.pull_request.title, '[Validation]') &&
          contains(fromJSON('["mjiao", "kksat", "RishabhKodes"]'), github.event.pull_request.user.login) &&
          steps.check-tekton-folder.outputs.tekton_only == 'true' &&
          steps.check-pipelinerun.outputs.has_pipelinerun == 'true'
        run: gh pr review --approve "$PR_URL"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}

      - name: Comment on non-compliant PR
        if: >-
          startsWith(github.event.pull_request.title, '[Validation]') &&
          contains(fromJSON('["mjiao", "kksat", "RishabhKodes"]'), github.event.pull_request.user.login) &&
          (steps.check-tekton-folder.outputs.tekton_only == 'false' || steps.check-pipelinerun.outputs.has_pipelinerun == 'false')
        run: |
          COMMENT="❌ Auto-approval failed. This PR must:

          - Only modify files in the \`.tekton\` folder
          - Only modify files that contain \`PipelineRun\` resources

          Current status:
          - Files in .tekton folder only: ${{ steps.check-tekton-folder.outputs.tekton_only }}
          - Files contain PipelineRun: ${{ steps.check-pipelinerun.outputs.has_pipelinerun }}"

          gh pr comment "$PR_URL" --body "$COMMENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}

      - name: Validate PR requirements
        run: |
          if [[ "${{ steps.check-tekton-folder.outputs.tekton_only }}" == "false" ]]; then
            echo "❌ PR validation failed: Files outside .tekton folder detected"
            echo "This PR must only modify files in the .tekton folder"
            exit 1
          fi

          if [[ "${{ steps.check-pipelinerun.outputs.has_pipelinerun }}" == "false" ]]; then
            echo "❌ PR validation failed: No PipelineRun resources found"
            echo "This PR must modify files that contain PipelineRun resources"
            exit 1
          fi

          echo "✅ PR validation passed"
          echo "All requirements met:"
          echo "- Files in .tekton folder only: ${{ steps.check-tekton-folder.outputs.tekton_only }}"
          echo "- Files contain PipelineRun: ${{ steps.check-pipelinerun.outputs.has_pipelinerun }}"
